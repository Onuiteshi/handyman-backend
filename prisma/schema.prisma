// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(uuid())
  email         String    @unique
  phone         String    @unique
  password      String
  name          String
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  profile       Profile?
}

model Artisan {
  id            String    @id @default(uuid())
  email         String    @unique
  phone         String    @unique
  password      String
  name          String
  experience    Int       // Years of experience
  bio           String?
  photoUrl      String?
  idDocumentUrl String?   // URL to uploaded ID document
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  profile       Profile?
  categories    ArtisanServiceCategory[]
}

model Profile {
  id            String    @id @default(uuid())
  userId        String?   @unique
  artisanId     String?   @unique
  user          User?     @relation(fields: [userId], references: [id])
  artisan       Artisan?  @relation(fields: [artisanId], references: [id])
  address       String?
  city          String?
  state         String?
  country       String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model ServiceCategory {
  id            String    @id @default(uuid())
  name          String    @unique
  description   String?
  artisans      ArtisanServiceCategory[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model ArtisanServiceCategory {
  artisanId     String
  categoryId    String
  artisan       Artisan   @relation(fields: [artisanId], references: [id])
  category      ServiceCategory @relation(fields: [categoryId], references: [id])
  createdAt     DateTime  @default(now())

  @@id([artisanId, categoryId])
}
